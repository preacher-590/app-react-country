{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALEX\\\\Desktop\\\\cours-react\\\\src\\\\components\\\\Countries.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Countries = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [sortedData, setSortedData] = useState([]);\n  const [playOnce, setPlayOnce] = useState(true);\n  const [rangeValue, setRangeValue] = useState(40);\n  const [selectedRadio, setSelectedRadio] = useState(\"\");\n  const radios = [\"Africa\", \"America\", \"Asia\", \"Europe\", \"Oceania\"];\n  useEffect(() => {\n    if (playOnce) {\n      axios.get(\"https://restcountries.eu/rest/v2/all?fields=name;population;region;capital;flag\").then(res => {\n        setData(res.data);\n        setPlayOnce(false);\n      });\n    }\n    const sortedCountry = () => {\n      const countryObj = Object.keys(data).map(i => data[i]);\n      const sortedArray = countryObj.sort((a, b) => {\n        return b.population - a.population;\n      });\n      sortedArray.length = rangeValue;\n      setSortedData(sortedArray);\n    };\n    sortedCountry();\n  }, [data, rangeValue, playOnce]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"countries\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sort-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"1\",\n        max: \"250\",\n        value: rangeValue,\n        onChange: e => setRangeValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: radios.map(radio => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: radio,\n              id: radio,\n              checked: radio === selectedRadio,\n              onChange: e => setSelectedRadio(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: radio,\n              children: radio\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)]\n          }, radio, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cancel\",\n      children: selectedRadio && /*#__PURE__*/_jsxDEV(\"h5\", {\n        onClick: () => setSelectedRadio(\"\"),\n        children: \"Annuler recherche\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"countries-list\",\n      children: sortedData.filter(country => country.region.includes(selectedRadio)).map(country => /*#__PURE__*/_jsxDEV(Card, {\n        country: country\n      }, country.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Countries, \"cQ6sFR8mQfRspMWVJVyfPOL5t0I=\");\n_c = Countries;\nexport default Countries;\nvar _c;\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"names":["React","useState","useEffect","axios","Card","Countries","data","setData","sortedData","setSortedData","playOnce","setPlayOnce","rangeValue","setRangeValue","selectedRadio","setSelectedRadio","radios","get","then","res","sortedCountry","countryObj","Object","keys","map","i","sortedArray","sort","a","b","population","length","e","target","value","radio","filter","country","region","includes","name"],"sources":["C:/Users/ALEX/Desktop/cours-react/src/components/Countries.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Card from \"./Card\";\n\nconst Countries = () => {\n  const [data, setData] = useState([]);\n  const [sortedData, setSortedData] = useState([]);\n  const [playOnce, setPlayOnce] = useState(true);\n  const [rangeValue, setRangeValue] = useState(40);\n  const [selectedRadio, setSelectedRadio] = useState(\"\");\n  const radios = [\"Africa\", \"America\", \"Asia\", \"Europe\", \"Oceania\"];\n\n  useEffect(() => {\n    if (playOnce) {\n      axios\n        .get(\n          \"https://restcountries.eu/rest/v2/all?fields=name;population;region;capital;flag\"\n        )\n        .then((res) => {\n          setData(res.data);\n          setPlayOnce(false);\n        });\n    }\n\n    const sortedCountry = () => {\n      const countryObj = Object.keys(data).map((i) => data[i]);\n      const sortedArray = countryObj.sort((a, b) => {\n        return b.population - a.population;\n      });\n      sortedArray.length = rangeValue;\n      setSortedData(sortedArray);\n    };\n    sortedCountry();\n  }, [data, rangeValue, playOnce]);\n\n  return (\n    <div className=\"countries\">\n      <div className=\"sort-container\">\n        <input\n          type=\"range\"\n          min=\"1\"\n          max=\"250\"\n          value={rangeValue}\n          onChange={(e) => setRangeValue(e.target.value)}\n        />\n        <ul>\n          {radios.map((radio) => {\n            return (\n              <li key={radio}>\n                <input\n                  type=\"radio\"\n                  value={radio}\n                  id={radio}\n                  checked={radio === selectedRadio}\n                  onChange={(e) => setSelectedRadio(e.target.value)}\n                />\n                <label htmlFor={radio}>{radio}</label>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n      <div className=\"cancel\">\n        {selectedRadio && (\n          <h5 onClick={() => setSelectedRadio(\"\")}>Annuler recherche</h5>\n        )}\n      </div>\n      <ul className=\"countries-list\">\n        {sortedData\n          .filter((country) => country.region.includes(selectedRadio))\n          .map((country) => (\n            <Card country={country} key={country.name} />\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Countries;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}